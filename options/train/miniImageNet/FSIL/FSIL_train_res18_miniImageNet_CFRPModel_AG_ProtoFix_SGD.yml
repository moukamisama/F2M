#################
# General Setting
#################
# Experiment name, if the experiment name has the word debug, it will enter debug mode
name: CFRPModel_res18_miniImageNet_{DB:4}{sfc8:0.016}{PTFix:1.0}{rdt2}{BathchSize:256}{std:2.0}_60base_wandb_001
# The type of model used, usually the class name of the model defined in the `methods` directory
model_type: CFRPModel
# gpu
gpu: '1'
# Random seed
manual_seed: 1997
Random: false

#################################
# The settings for the dataset and data loader
#################################
transformer_agu:
  - type: RandomResizedCrop
    size: 84
  - type: RandomHorizontalFlip
  - type: ToTensor
  - type: Normalize
    mean: !!python/tuple [0.485, 0.456, 0.406]
    std: !!python/tuple [0.229, 0.224, 0.225]

transformer:
  - type: Resize
    size: 92
  - type: CenterCrop
    size: 84
  - type: ToTensor
  - type: Normalize
    mean: !!python/tuple [ 0.485, 0.456, 0.406 ]
    std: !!python/tuple [ 0.229, 0.224, 0.225 ]

datasets:
  # The important information of dataset
  train:
    name: miniImageNet
    type: NormalDataset
    total_classes: 100
    dataroot: ./DataSet/FSIL_miniImageNet/miniimagenet/train
    aug: true
    # Number of processes read by the data loader per GPU
    num_worker_per_gpu: 0
    # Batch size
    batch_size_base_classes: 256
    pin_memory: true
    pre_load: true

    sampler:
      type: TaskSampler
      num_samples: 16

  val:
    name: miniImageNet
    type: NormalDataset
    total_classes: 100
    dataroot: ./DataSet/FSIL_miniImageNet/miniimagenet/test
    aug: false
    pin_memory: true
    pre_load: false
    # Number of processes read by the data loader per GPU
    num_worker_per_gpu: 8
    sampler:
      type: ~

#####################
# The following is the setup of the network structure
#####################
network_g:
  type: Resnet18_softmax
  Embed_dim: 512
  pretrained: false
  norm: false
  num_classes: 60
  adopt_classifier: true
  addition_net: false
  flatten: true
  cut_at_pooling: false

######################################
# The following are the paths
######################################
path:
  # Pre-trained model path, need models ending in pth
  pretrain_model_g: ~
  # Whether to load pretrained models strictly, that is the corresponding parameter names should be the same
  strict_load: true
  #
  resume_state: ~

#################
# The following is the training setup
#################
train:
  # Optimizer
  optim_g:
    # The type of optimizer
    type: SGD
    ##### The following properties are flexible and have different settings depending on the optimizer
    # learning rate
    lr: !!float 1e-1
    weight_decay: !!float 5e-4
    # momentum
    momentum: !!float 0.9

  # The setting of scheduler
  scheduler:
    # The type of scheduler
    type: MultiStepLR
    #### The following properties are flexible, depending on the learning rate Scheduler has different settings
    # milestones
    milestones: [ !!python/object/apply:eval [ 5000 * 3 ],
                  !!python/object/apply:eval [ 7000 * 3 ]]
    # gama
    gamma: 0.1

  random_noise:
    distribution:
      type: DiscreteBeta
    type: suffix_conv_weight
    num_layers: 8
    low: 0.1
    high: 5.0
    reduction_factor: 4
    bound_value: 0.016
    random_times: 2

  # The number of epoch
  epoch: 9500
  original_loss: false
  # The number of warm up iteration, if -1, means no warm up
  warmup_iter: -1  # no warm up
  # number of base classes
  bases: 60
  # number of tasks for incremental few-shot learning
  tasks: 9
  std_w: 2.0

  proto_loss:
    type: ProtoFixLoss
    shots: 16
    w: 1.0

#######################
# The following are the settings for Validation
#######################
val:
  # The frequency of validation
  val_freq: 1500
  debug_val_freq: 1000

####################
# The following are the settings for Logging
####################
logger:
  # Frequency of loggers printed on the screen according to iteration
  print_freq: 3
  # 保存checkpoint的频率
  save_checkpoint_freq: 20000
  # Whether to use tensorboard logger

  use_tb_logger: true
  # Whether to use wandb logger
  wandb:
    # The default is None, i.e. wandb is not used.
    project: FSIL-Noise-miniImageNet-60bases
    # If it is resume, you can enter the last wandb id, then the log can be connected
    resume_id: ~
